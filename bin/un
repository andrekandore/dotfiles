#!/bin/bash

TRASH="$HOME/.Trash"
TRASH_MAX="10"

function hoursago_dir {
  local DATETIME="$1 hours ago"
  local DATEHOUR="$(date --date="$DATETIME" +'%Y-%m-%d_%H')"
  echo "$TRASH/$DATEHOUR"
}

function verbose_rm {
  echo "rm -rf $1"
  if [ -e "$1" ]; then
    chmod -R u+w "$1"
  fi
  rm -rf "$1"
}

function trash_contents {
  CUT_SIZE="$(echo "$TRASH/" | wc -c | tr -d ' 	')"
  ls -d "$TRASH/"*/* | cut -c"$CUT_SIZE"- | sort -t/ -k1.1,1.4 -k1.6,1.7 -k1.9,1.10 -k1.12 -k2,2 -n
}

function trash_count {
  trash_contents | wc -l | tr -d ' 	'
}

TRASH_COUNT="$(trash_count)"
if [ "$TRASH_COUNT" -gt "$TRASH_MAX" ]; then
  echo "There are currently $TRASH_COUNT files in the trash."
  RM_COUNT=$(($TRASH_COUNT - $TRASH_MAX))
  if [ "$RM_COUNT" -gt 1 ]; then
    echo "Maximum of $TRASH_MAX exceeded: deleting the $RM_COUNT oldest files."
  else
    echo "Maximum of $TRASH_MAX exceeded: deleting the oldest file."
  fi
  for x in `trash_contents | head -n "$RM_COUNT"`; do
    verbose_rm "$TRASH/$x"
  done
  
  if [ "$(trash_count)" -gt "$TRASH_MAX" ]; then
    echo "you might want to empty the $TRASH yourself;"
    echo "there are files I don't know about in there."
  fi
fi

DEST="$(hoursago_dir 0)"

mkdir -p "$DEST"
while [ $# -gt 0 ]; do
  FILE="$1"; shift
  COUNT="$(ls "$DEST" | wc -l)"
  mkdir "$DEST/$COUNT"
  mv "$FILE" "$DEST/$COUNT/$(basename "$1")"
done
